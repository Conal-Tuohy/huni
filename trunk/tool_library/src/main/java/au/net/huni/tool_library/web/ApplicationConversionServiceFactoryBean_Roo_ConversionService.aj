// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.net.huni.tool_library.web;

import au.net.huni.tool_library.model.Category;
import au.net.huni.tool_library.model.Tool;
import au.net.huni.tool_library.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Category, String> ApplicationConversionServiceFactoryBean.getCategoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<au.net.huni.tool_library.model.Category, java.lang.String>() {
            public String convert(Category category) {
                return new StringBuilder().append(category.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Category> ApplicationConversionServiceFactoryBean.getIdToCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, au.net.huni.tool_library.model.Category>() {
            public au.net.huni.tool_library.model.Category convert(java.lang.Long id) {
                return Category.findCategory(id);
            }
        };
    }
    
    public Converter<String, Category> ApplicationConversionServiceFactoryBean.getStringToCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, au.net.huni.tool_library.model.Category>() {
            public au.net.huni.tool_library.model.Category convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Category.class);
            }
        };
    }
    
    public Converter<Tool, String> ApplicationConversionServiceFactoryBean.getToolToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<au.net.huni.tool_library.model.Tool, java.lang.String>() {
            public String convert(Tool tool) {
                return new StringBuilder().append(tool.getName()).append(' ').append(tool.getDescription()).append(' ').append(tool.getUrl()).append(' ').append(tool.getFilepath()).toString();
            }
        };
    }
    
    public Converter<Long, Tool> ApplicationConversionServiceFactoryBean.getIdToToolConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, au.net.huni.tool_library.model.Tool>() {
            public au.net.huni.tool_library.model.Tool convert(java.lang.Long id) {
                return Tool.findTool(id);
            }
        };
    }
    
    public Converter<String, Tool> ApplicationConversionServiceFactoryBean.getStringToToolConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, au.net.huni.tool_library.model.Tool>() {
            public au.net.huni.tool_library.model.Tool convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Tool.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCategoryToStringConverter());
        registry.addConverter(getIdToCategoryConverter());
        registry.addConverter(getStringToCategoryConverter());
        registry.addConverter(getToolToStringConverter());
        registry.addConverter(getIdToToolConverter());
        registry.addConverter(getStringToToolConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
