// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.net.huni.model;

import au.net.huni.model.HistoryItem;
import au.net.huni.model.HistoryItemDataOnDemand;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;

privileged aspect HistoryItemDataOnDemand_Roo_DataOnDemand {
    
    public HistoryItem HistoryItemDataOnDemand.getNewTransientHistoryItem(int index) {
        HistoryItem obj = new HistoryItem();
        setBackgroundColour(obj, index);
        setExecutionDate(obj, index);
        setToolName(obj, index);
        return obj;
    }
    
    public void HistoryItemDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = HistoryItem.findHistoryItemEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'HistoryItem' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<HistoryItem>();
        for (int i = 0; i < 10; i++) {
            HistoryItem obj = getNewTransientHistoryItem(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
