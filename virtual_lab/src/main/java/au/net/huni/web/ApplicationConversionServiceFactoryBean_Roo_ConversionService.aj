// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.net.huni.web;

import au.net.huni.model.HistoryItem;
import au.net.huni.model.Researcher;
import au.net.huni.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<HistoryItem, String> ApplicationConversionServiceFactoryBean.getHistoryItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<au.net.huni.model.HistoryItem, java.lang.String>() {
            public String convert(HistoryItem historyItem) {
                return new StringBuilder().append(historyItem.getToolName()).append(' ').append(historyItem.getBackgroundColour()).append(' ').append(historyItem.getJson()).append(' ').append(historyItem.getExecutionDate()).toString();
            }
        };
    }
    
    public Converter<Long, HistoryItem> ApplicationConversionServiceFactoryBean.getIdToHistoryItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, au.net.huni.model.HistoryItem>() {
            public au.net.huni.model.HistoryItem convert(java.lang.Long id) {
                return HistoryItem.findHistoryItem(id);
            }
        };
    }
    
    public Converter<String, HistoryItem> ApplicationConversionServiceFactoryBean.getStringToHistoryItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, au.net.huni.model.HistoryItem>() {
            public au.net.huni.model.HistoryItem convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), HistoryItem.class);
            }
        };
    }
    
    public Converter<Researcher, String> ApplicationConversionServiceFactoryBean.getResearcherToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<au.net.huni.model.Researcher, java.lang.String>() {
            public String convert(Researcher researcher) {
                return new StringBuilder().append(researcher.getUserName()).append(' ').append(researcher.getGivenName()).append(' ').append(researcher.getFamilyName()).toString();
            }
        };
    }
    
    public Converter<Long, Researcher> ApplicationConversionServiceFactoryBean.getIdToResearcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, au.net.huni.model.Researcher>() {
            public au.net.huni.model.Researcher convert(java.lang.Long id) {
                return Researcher.findResearcher(id);
            }
        };
    }
    
    public Converter<String, Researcher> ApplicationConversionServiceFactoryBean.getStringToResearcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, au.net.huni.model.Researcher>() {
            public au.net.huni.model.Researcher convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Researcher.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getHistoryItemToStringConverter());
        registry.addConverter(getIdToHistoryItemConverter());
        registry.addConverter(getStringToHistoryItemConverter());
        registry.addConverter(getResearcherToStringConverter());
        registry.addConverter(getIdToResearcherConverter());
        registry.addConverter(getStringToResearcherConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
